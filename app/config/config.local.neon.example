php:
	intl.default_locale: sk_SK

services:
    # All console commands you need to use should be registered here
    # This is a set that we recommend to use
    console:
        setup:
            - add(Remp\MailerModule\Commands\SyncUserSubscriptionsCommand())
            - add(Remp\MailerModule\Commands\MailgunEventsCommand())
            # If you're using Beam, you can enable this command to pull conversions from there
            # - add(Remp\MailerModule\Commands\ProcessConversionStatsCommand())

#	# Internal CRM system. For more details contact Tomas Bella.
#	authenticator:
#		factory: Remp\MailerModule\Models\Auth\Authenticator
#	authStorage:
#		factory: Remp\MailerModule\Models\Auth\RemoteUser(%sso_host%)

    embedParser:
        setup:
            - setVideoLinkText("Click to play video")
    articleLocker:
        setup:
            - setLockText("Exclusive content")
            - setupLockLink("Registration", "https://www.demosite.com/registration")

    unsubscribeDroppedHandler:
        factory: Remp\MailerModule\Hermes\UnsubscribeDroppedHandler
        setup:
            - setThreshold(3) # number of dropped emails before unsubscribing user

    # shutdown hermes and mail worker with file (checks modification date; see SharedFileShutdown implementation)
    hermesShutdown: Tomaj\Hermes\Shutdown\SharedFileShutdown('/tmp/hermes_shutdown')
    hermesWorker:
        setup:
            - add('email-dropped', @unsubscribeDroppedHandler)

    # Setup loggers output
    commandsLogger:
        setup:
            - pushHandler(Monolog\Handler\StreamHandler("%appDir%/../log/commands.log"))
    mailProcessLogger:
        setup:
            - pushHandler(Monolog\Handler\StreamHandler("%appDir%/../log/mail_process_job.log"))
    hermesLogger:
        setup:
            - pushHandler(Monolog\Handler\StreamHandler("%appDir%/../log/hermes.log"))
            - pushHandler(Monolog\Handler\ErrorLogHandler())

    # This is a reference IUser implementation.
    # You should make your own implementation against your CRM system and register it here.
    - Remp\MailerModule\Models\Users\Dummy

    # To be able to send an email, you need to provide at least one ISegment implementation
    # You should make your own implementation against your CRM system and register it here.
    segmentAgreggator:
        setup:
            - register(Remp\MailerModule\Models\Segment\Dummy())
#            - register(Remp\MailerModule\Models\Segment\Beam(%remp.beam.segments_addr%))
#            - register(Remp\MailerModule\Models\Segment\Pythia(%remp.pythia.segments_addr%))

#    - Remp\MailerModule\Tracker\Remp(%remp.beam.tracker_addr%, %remp.beam.tracker_property_token%)
#    eventDispatcher:
#        factory: League\Event\EventDispatcher
#        setup:
#            - subscribeTo(Remp\MailerModule\Events\MailSentEvent, Remp\MailerModule\Events\MailSentEventHandler())

    # If you're using Beam and want to use ProcessConversionStatsCommand, enable this repository (it's a dependency)
#    - Remp\MailerModule\Repositories\BeamConversionsRepository

    # Setup of multiple mailers of the same type
#	mailFactory:
#		setup:
#			- addMailer(Remp\MailerModule\Models\Mailer\MailgunMailer(), 'us')
#			- addMailer(Remp\MailerModule\Models\Mailer\MailgunMailer(), 'eu')

# local_configs override DBs configs records.
local_configs:

    # Configuring usage of mailhog for local development
    remp_smtp_host: mailhog
    remp_smtp_host_port: 1025
    remp_smtp_host_username: ''
    remp_smtp_host_password: ''
    remp_smtp_host_secure: ''


# If running Mailer on Valet, please uncomment the following lines and adjust the full path to REMP/Mailer folder

#webpack:
#    build:
#        directory: /FULL_PATH_TO_REMP_FOLDER/Mailer/www/assets/vendor
